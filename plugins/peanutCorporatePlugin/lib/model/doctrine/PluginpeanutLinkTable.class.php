<?php

/**
 * peanutLinkTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class PluginpeanutLinkTable extends Doctrine_Table
{
  /**
   * Returns an instance of this class.
   *
   * @return object peanutLinkTable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('peanutLink');
  }

  /**
   * Retrieves link object.
   *
   * @param  string|int $item     The id or slug of item
   *
   * @return peanutLink
   */
  public function getItem($item)
  {
    $p = $this->createQuery('p')
            ->leftJoin('p.sfGuardUser s')
            ->leftJoin('p.peanutMenu m')
            ->leftJoin('p.peanutXFN x')
            ->where('p.id = ?', $item)
            ->orWhere('p.slug = ?', $item)
            ->orderBy('p.position ASC');

    return $p;
  }

  /**
   * Retrieves link object.
   *
   * @return peanutLink
   */
  public function getItems()
  {
    $p = $this->createQuery('p')
            ->leftJoin('p.sfGuardUser s')
            ->leftJoin('p.peanutMenu m')
            ->leftJoin('p.peanutXFN x')
            ->orderBy('p.created_at DESC');

    return $p;
  }

  /**
   * Retrieves links object by menu.
   *
   * @param  string|int $menu     The id or slug of menu
   *
   * @return peanutLink
   */
  public function getItemsByMenu($menu)
  {
    $p = $this->createQuery('p')
            ->leftJoin('p.sfGuardUser s')
            ->leftJoin('p.peanutMenu m')
            ->leftJoin('p.peanutXFN x')
            ->where('m.id = ?', $menu)
            ->orWhere('m.slug = ?', $menu)
            ->orderBy('p.position ASC');

    return $p;
  }

  /**
   * Retrieves links object by author.
   *
   * @param  string|int $author     The id or username of author
   *
   * @return peanutLink
   */
  public function getItemsByAuthor($author)
  {
    $p = $this->createQuery('p')
            ->leftJoin('p.sfGuardUser s')
            ->leftJoin('p.peanutMenu m')
            ->leftJoin('p.peanutXFN x')
            ->where('s.id = ?', $author)
            ->orWhere('s.username = ?', $author)
            ->orderBy('p.position ASC');

    return $p;
  }

  /**
   * Retrieves links object by relation.
   *
   * @param  string     $rel     The relation of item
   *
   * @return peanutLink
   */
  public function getItemsByRelation($rel)
  {
    $p = $this->createQuery('p')
            ->leftJoin('p.sfGuardUser s')
            ->leftJoin('p.peanutMenu m')
            ->leftJoin('p.peanutXFN x')
            ->where('x.me LIKE ?', '%' . $rel . '%')
            ->orWhere('x.friendship LIKE ?', '%' . $rel . '%')
            ->orWhere('x.physical LIKE ?', '%' . $rel . '%')
            ->orWhere('x.professional LIKE ?', '%' . $rel . '%')
            ->orWhere('x.geographical LIKE ?', '%' . $rel . '%')
            ->orWhere('x.family LIKE ?', '%' . $rel . '%')
            ->orWhere('x.romantic LIKE ?', '%' . $rel . '%')
            ->orderBy('p.position ASC');

    return $p;
  }
}