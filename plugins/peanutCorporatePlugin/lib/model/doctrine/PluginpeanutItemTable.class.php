<?php

/**
 * peanutItemTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class PluginpeanutItemTable extends Doctrine_Table
{
  /**
   * Returns an instance of this class.
   *
   * @return object peanutItemTable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('peanutItem');
  }

  /**
   * Retrieves item object.
   *
   * @param  string|int $item     The id or slug of item
   * @param  string     $type     The type of item
   *
   * @return peanutItem
   */
  public function getItem($item, $type = null)
  {
    $p = $this->createQuery('p')
            ->leftJoin('p.sfGuardUser s')
            ->leftJoin('p.peanutMenu m')
            ->leftJoin('p.peanutSeo o')
            ->where('p.id = ?', $item)
            ->orWhere('p.slug = ?', $item)
            ->orderBy('p.position ASC');

    if(null !== $type)
    {
      $p->addWhere('p.type = ?', $type);
    }
    
    return $p;
  }

  /**
   * Retrieves items object.
   *
   * @param  string     $status   The status of the item
   * @param  string     $type     The type of item
   *
   * @return peanutItem
   */
  public function getItems($status = 'publish', $type = null)
  {
    $p = $this->createQuery('p')
            ->leftJoin('p.sfGuardUser s')
            ->leftJoin('p.peanutMenu m')
            ->where('p.status = ?', $status)
            ->orderBy('p.position ASC');

    if(null !== $type)
    {
      $p->andWhere('p.type = ?', $type);
    }

    return $p;
  }

  /**
   * Retrieves items object by menu.
   *
   * @param  string|int $menu     The id or slug of menu
   * @param  string     $status   The status of items
   * @param  string     $type     The type of item
   *
   * @return peanutItem
   */
  public function getItemsByMenu($menu, $status = 'publish', $type = null)
  {
    $p = $this->createQuery('p')
            ->leftJoin('p.sfGuardUser s')
            ->leftJoin('p.peanutMenu m')
            ->where('m.id = ? OR m.slug = ?', array($menu, $menu))
            ->andWhere('p.status = ?', $status)
            ->orderBy('p.position ASC');

    if(null !== $type)
    {
      $p->andWhere('p.type = ?', $type);
    }
    
    return $p;
  }

  /**
   * Retrieves items object by user.
   *
   * @param  string|int $user     The id or username of user
   * @param  string     $status   The status of items
   * @param  string     $type     The type of item
   *
   * @return peanutItem
   */
  public function getItemsByUser($user, $status = 'publish', $type = null)
  {
    $p = $this->createQuery('p')
            ->leftJoin('p.sfGuardUser s')
            ->leftJoin('p.peanutMenu m')
            ->where('s.id = ? OR s.username = ?', array($user, $user))
            ->orderBy('p.position ASC');

    if(null !== $type)
    {
      $p->andWhere('p.type = ?', $type);
    }
    
    return $p;
  }

}